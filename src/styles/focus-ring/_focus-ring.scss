//
// Copyright 2021 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

@use './../feature-targeting/feature-targeting';
@use './../rtl/rtl';
@use './../dom/dom';

$ring-radius: 8px !default;
$inner-ring-width: 2px !default;
$inner-ring-color: transparent !default;
$outer-ring-width: 2px !default;
$outer-ring-color: transparent !default;
$container-outer-padding: 2px !default;

/// Styles applied to the component's inner focus ring element.
///
/// @param $ring-radius [$ring-radius] - Focus ring radius.
/// @param $inner-ring-width [$inner-ring-width] - Inner focus ring width.
/// @param $inner-ring-color [$inner-ring-color] - Inner focus ring color.
/// @param $outer-ring-width [$outer-ring-width] - Outer focus ring width.
/// @param $outer-ring-color [$outer-ring-color] - Outer focus ring color.
/// @param $container-outer-padding [$container-outer-padding] - The distance
///     between the focus ring and the container.
@mixin focus-ring(
  $query: feature-targeting.all(),
  $ring-radius: $ring-radius,
  $inner-ring-width: $inner-ring-width,
  $inner-ring-color: $inner-ring-color,
  $outer-ring-width: $outer-ring-width,
  $outer-ring-color: $outer-ring-color,
  $container-outer-padding-vertical: $container-outer-padding,
  $container-outer-padding-horizontal: $container-outer-padding
) {
  $feat-structure: feature-targeting.create-target($query, structure);
  $container-size-vertical: 100%;
  @if $container-outer-padding-vertical != 0 {
    $container-size-vertical: calc(
      100% + #{$container-outer-padding-vertical * 2}
    );
  }
  $container-size-horizontal: 100%;
  @if $container-outer-padding-horizontal != 0 {
    $container-size-horizontal: calc(
      100% + #{$container-outer-padding-horizontal * 2}
    );
  }
  $outer-ring-size: 100%;
  @if $outer-ring-width > 0 {
    $outer-ring-size: calc(100% + #{$outer-ring-width * 2});
  }
  @include feature-targeting.targets($feat-structure) {
    pointer-events: none;
    border: $inner-ring-width solid $inner-ring-color;
    border-radius: $ring-radius - $outer-ring-width;
    box-sizing: content-box;
    position: absolute;
    top: 50%;
    @include rtl.ignore-next-line();
    left: 50%;
    @include rtl.ignore-next-line();
    transform: translate(-50%, -50%);
    height: $container-size-vertical;
    width: $container-size-horizontal;

    @include dom.forced-colors-mode($exclude-ie11: true) {
      border-color: CanvasText;
    }

    &::after {
      content: '';
      border: $outer-ring-width solid $outer-ring-color;
      border-radius: $ring-radius;
      display: block;
      position: absolute;
      top: 50%;
      @include rtl.ignore-next-line();
      left: 50%;
      @include rtl.ignore-next-line();
      transform: translate(-50%, -50%);
      height: $outer-ring-size;
      width: $outer-ring-size;

      @include dom.forced-colors-mode($exclude-ie11: true) {
        border-color: CanvasText;
      }
    }
  }
}
