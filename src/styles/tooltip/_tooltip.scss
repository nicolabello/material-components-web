//
// Copyright 2020 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

// Selector '.mdc-*' should only be used in this project.
// stylelint-disable selector-class-pattern

@use './../animation/functions' as animation-functions;
@use './../elevation/mixins' as elevation-mixins;
@use './../feature-targeting/feature-targeting';
@use './../rtl/rtl' as rtl;
@use './tooltip-theme';
@use './../typography/typography';

$_padding-x: 4px;
$_padding-y: 8px;
$_min-width: 40px;
$_max-height: 40vh;
//LINT.IfChange(tooltip-dimensions)
$_max-width: 200px;
$_min-height: 24px;
// LINT.ThenChange(constants.ts:tooltip-dimensions)
$_label-type-scale: caption;
$_line-height: 16px;

// Rich Tooltip variables
$_rich_corner_radius: 8px;
$_rich_padding: 8px;

$enter-duration: 150ms;
$exit-duration: 75ms;

@mixin core-styles($query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);
  $feat-animation: feature-targeting.create-target($query, animation);

  @include tooltip-theme.shape-radius(
    tooltip-theme.$border-radius,
    $query: $query
  );
  @include tooltip-theme.label-ink-color(
    tooltip-theme.$label-color,
    $query: $query
  );
  @include tooltip-theme.fill-color(
    tooltip-theme.$background-color,
    $query: $query
  );
  @include tooltip-theme.word-break(
    tooltip-theme.$word-break-default,
    tooltip-theme.$word-break-ie11-fallback,
    $query: $query
  );
  @include tooltip-theme.z-index(tooltip-theme.$z-index, $query: $query);

  .mdc-tooltip {
    @include feature-targeting.targets($feat-structure) {
      position: fixed;
      display: none;
    }
  }

  .mdc-tooltip--shown,
  .mdc-tooltip--showing,
  .mdc-tooltip--hide {
    @include feature-targeting.targets($feat-structure) {
      display: inline-flex;
    }

    &.mdc-tooltip--rich {
      @include elevation-mixins.elevation(2, $query: $query);
      @include feature-targeting.targets($feat-structure) {
        display: inline-block;
        border-radius: $_rich_corner_radius;
        padding: $_rich_padding $_rich_padding;
      }
    }
  }

  .mdc-tooltip__surface {
    @include typography.typography(
      $_label-type-scale,
      $exclude-props: (line-height),
      $query: $query
    );

    @include feature-targeting.targets($feat-structure) {
      line-height: $_line-height;
      padding: $_padding-x $_padding-y;
      min-width: $_min-width;
      max-width: $_max-width;
      min-height: $_min-height;
      max-height: $_max-height;
      box-sizing: border-box;
      overflow: hidden;
      transform: scale(0.8);
      text-align: center;
      opacity: 0;
      outline: 1px solid transparent;
    }

    .mdc-tooltip--multiline & {
      @include feature-targeting.targets($feat-structure) {
        /* @noflip */
        text-align: left;
        @include rtl.rtl {
          /* @noflip */
          text-align: right;
        }
      }
    }

    .mdc-tooltip--shown & {
      @include feature-targeting.targets($feat-structure) {
        transform: scale(1);
        opacity: 1;
      }
    }

    .mdc-tooltip--showing-transition & {
      @include feature-targeting.targets($feat-animation) {
        transition: animation-functions.enter(opacity, $enter-duration),
          animation-functions.enter(transform, $enter-duration);
      }
    }

    .mdc-tooltip--hide & {
      @include feature-targeting.targets($feat-structure) {
        transform: scale(1);
      }
    }

    .mdc-tooltip--hide-transition & {
      @include feature-targeting.targets($feat-animation) {
        transition: animation-functions.exit-permanent(opacity, $exit-duration);
      }
    }
  }
}
