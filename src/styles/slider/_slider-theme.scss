//
// Copyright 2020 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

// stylelint-disable selector-class-pattern --
// Selector '.mdc-*' should only be used in this project.

@use 'sass:map';
@use './../feature-targeting/feature-targeting';
@use './../ripple/ripple-theme';
@use './../theme/state';
@use './../theme/theme';

/// Default color for slider (track, thumb, ripple).
$color: primary;
$disabled-color: on-surface;

// Thumb variables.
$value-indicator-color: #000;
$value-indicator-opacity: 0.6;
$value-indicator-text-color: on-primary;

// Track variables.
$track-inactive-opacity: 0.24;
$tick-mark-active-color: on-primary;
$tick-mark-inactive-color: primary;
$tick-mark-opacity: 0.6;

$light-theme: (
  active-track-color: $color,
  active-track-height: 6px,
  active-track-shape: null,
  disabled-active-track-color: $disabled-color,
  disabled-active-track-opacity: null,
  disabled-handle-color: $disabled-color,
  disabled-handle-elevation: null,
  disabled-handle-opacity: null,
  disabled-inactive-track-color: $disabled-color,
  disabled-inactive-track-opacity: null,
  focus-handle-color: null,
  focus-state-layer-color: null,
  focus-state-layer-opacity: null,
  handle-color: $color,
  handle-elevation: null,
  handle-height: 20px,
  handle-shadow-color: null,
  handle-shape: null,
  handle-width: 20px,
  hover-handle-color: null,
  hover-state-layer-color: null,
  hover-state-layer-opacity: null,
  inactive-track-color: $color,
  inactive-track-height: 4px,
  inactive-track-shape: null,
  label-container-color: $value-indicator-color,
  label-container-elevation: null,
  label-container-height: null,
  label-label-text-color: $value-indicator-text-color,
  label-label-text-font: null,
  label-label-text-font-size: null,
  label-label-text-line-height: null,
  label-label-text-size: null,
  label-label-text-tracking: null,
  label-label-text-type: null,
  label-label-text-weight: null,
  pressed-handle-color: null,
  pressed-state-layer-color: null,
  pressed-state-layer-opacity: null,
  state-layer-size: null,
  track-elevation: null,
  with-overlap-handle-outline-color: null,
  with-overlap-handle-outline-width: null,
  with-tick-marks-active-container-color: $tick-mark-active-color,
  with-tick-marks-active-container-opacity: $tick-mark-opacity,
  with-tick-marks-container-shape: null,
  with-tick-marks-container-size: 2px,
  with-tick-marks-disabled-container-color: $disabled-color,
  with-tick-marks-disabled-container-opacity: $tick-mark-opacity,
  with-tick-marks-inactive-container-color: $tick-mark-inactive-color,
  with-tick-marks-inactive-container-opacity: $tick-mark-opacity,
);

@mixin theme-styles($theme, $query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);

  @include theme.validate-theme-keys($light-theme, $theme);

  @include thumb-color(
    $color-or-map: (
      default: map.get($theme, 'handle-color'),
      disabled: map.get($theme, 'disabled-handle-color'),
    ),
    $query: $query
  );

  @include thumb-ripple-color(
    $color: map.get($theme, 'handle-color'),
    $query: $query
  );

  @include track-active-color(
    $color-or-map: (
      default: map.get($theme, 'active-track-color'),
      disabled: map.get($theme, 'disabled-active-track-color'),
    ),
    $query: $query
  );

  @include track-inactive-color(
    $color-or-map: (
      default: map.get($theme, 'inactive-track-color'),
      disabled: map.get($theme, 'disabled-inactive-track-color'),
    ),
    $query: $query
  );

  @include tick-mark-active-color(
    $color-or-map: (
      default: map.get($theme, 'with-tick-marks-active-container-color'),
      disabled: map.get($theme, 'with-tick-marks-active-container-color'),
    ),
    $query: $query
  );

  @include tick-mark-inactive-color(
    $color-or-map: (
      default: map.get($theme, 'with-tick-marks-inactive-container-color'),
      disabled: map.get($theme, 'with-tick-marks-disabled-container-color'),
    ),
    $query: $query
  );

  @include value-indicator-color(
    $color: map.get($theme, 'label-container-color'),
    $opacity: $value-indicator-opacity,
    $query: $query
  );

  @include value-indicator-text-color(
    $color: map.get($theme, 'label-label-text-color'),
    $query: $query
  );

  .mdc-slider__track {
    @include feature-targeting.targets($feat-structure) {
      height: map.get($theme, 'inactive-track-height');
    }
  }

  .mdc-slider__track--active {
    @include feature-targeting.targets($feat-structure) {
      height: map.get($theme, 'active-track-height');
    }
  }

  .mdc-slider__track--inactive {
    @include feature-targeting.targets($feat-structure) {
      height: map.get($theme, 'inactive-track-height');
    }
  }

  .mdc-slider__tick-mark--active,
  .mdc-slider__tick-mark--inactive {
    @include feature-targeting.targets($feat-structure) {
      height: map.get($theme, 'with-tick-marks-container-size');
      width: map.get($theme, 'with-tick-marks-container-size');
    }
  }
}

/// Customizes active track color, using a Color or state Map.
/// - To set only the default color, provide a single Color.
/// - To set one or more state colors, provide a state Map with optional keys.
/// - Supported state Map keys: `default`, `disabled`.
///
/// @example
///   @include track-active-color(blue);
///   @include track-active-color((disabled: gray));
///
/// @param {Color | Map} $color-or-map - The label's color or a state Map
@mixin track-active-color($color-or-map, $query: feature-targeting.all()) {
  @include _set-track-active-color(
    state.get-default-state($color-or-map),
    $query
  );

  $_disabled-color: state.get-disabled-state($color-or-map);
  @if $_disabled-color {
    &.mdc-slider--disabled {
      @include _set-track-active-color($_disabled-color, $query);
    }
  }
}

@mixin _set-track-active-color($color, $query) {
  $feat-color: feature-targeting.create-target($query, color);

  .mdc-slider__track--active_fill {
    @include feature-targeting.targets($feat-color) {
      @include theme.property(border-color, $color);
    }
  }
}

/// Customizes inactive track color, using a Color or state Map.
/// - To set only the default color, provide a single Color.
/// - To set one or more state colors, provide a state Map with optional keys.
/// - Supported state Map keys: `default`, `disabled`.
///
/// @example
///   @include track-inactive-color(blue);
///   @include track-inactive-color((disabled: gray));
///
/// @param {Color | Map} $color-or-map - The label's color or a state Map
@mixin track-inactive-color(
  $color-or-map,
  $opacity: $track-inactive-opacity,
  $query: feature-targeting.all()
) {
  @include _set-track-inactive-color(
    state.get-default-state($color-or-map),
    $opacity,
    $query
  );

  $_disabled-color: state.get-disabled-state($color-or-map);
  @if $_disabled-color {
    &.mdc-slider--disabled {
      @include _set-track-inactive-color($_disabled-color, $opacity, $query);
    }
  }
}

@mixin _set-track-inactive-color($color, $opacity, $query) {
  $feat-color: feature-targeting.create-target($query, color);

  .mdc-slider__track--inactive {
    @include feature-targeting.targets($feat-color) {
      @include theme.property(background-color, $color);

      opacity: $opacity;
    }
  }
}

/// Customizes thumb color, using a Color or state Map.
/// - To set only the default color, provide a single Color.
/// - To set one or more state colors, provide a state Map with optional keys.
/// - Supported state Map keys: `default`, `disabled`.
///
/// @example
///   @include thumb-color(blue);
///   @include thumb-color((disabled: gray));
///
/// @param {Color | Map} $color-or-map - The label's color or a state Map
@mixin thumb-color($color-or-map, $query: feature-targeting.all()) {
  @include _set-thumb-color(state.get-default-state($color-or-map), $query);

  $_disabled-color: state.get-disabled-state($color-or-map);
  @if $_disabled-color {
    &.mdc-slider--disabled {
      @include _set-thumb-color($_disabled-color, $query);
    }
  }
}

@mixin _set-thumb-color($color, $query) {
  $feat-color: feature-targeting.create-target($query, color);

  @include feature-targeting.targets($feat-color) {
    .mdc-slider__thumb-knob {
      @include theme.property(background-color, $color);
      @include theme.property(border-color, $color);
    }

    .mdc-slider__thumb--top {
      .mdc-slider__thumb-knob,
      &.mdc-slider__thumb:hover .mdc-slider__thumb-knob,
      &.mdc-slider__thumb--focused .mdc-slider__thumb-knob {
        border-color: #fff;
      }
    }
  }
}

///
/// Customizes thumb ripple color.
/// @param {Color | String} $color Either a valid color value or a key from
///     `$theme-variables.property-values`.
///
@mixin thumb-ripple-color($color, $query: feature-targeting.all()) {
  .mdc-slider__thumb {
    @include ripple-theme.states($color: $color, $query: $query);
  }
}

/// Customizes thumb color when thumb is activated (hover, focused, or pressed
/// state).
///
/// @param {Color} $color - The thumb's color
@mixin thumb-activated-color($color, $query: feature-targeting.all()) {
  $feat-color: feature-targeting.create-target($query, color);

  .mdc-slider__thumb:hover,
  .mdc-slider__thumb--focused {
    @include _set-thumb-color($color, $query);
  }
}

/// Customizes color of active tick marks, using a Color or state Map.
/// - To set only the default color, provide a single Color.
/// - To set one or more state colors, provide a state Map with optional keys.
/// - Supported state Map keys: `default`, `disabled`.
///
/// @example
///   @include tick-mark-active-color(blue);
///   @include tick-mark-active-color((disabled: gray));
///
/// @param {Color | Map} $color-or-map - The label's color or a state Map
@mixin tick-mark-active-color(
  $color-or-map,
  $opacity: $tick-mark-opacity,
  $query: feature-targeting.all()
) {
  @include _set-tick-mark-active-color(
    state.get-default-state($color-or-map),
    $opacity,
    $query
  );

  $_disabled-color: state.get-disabled-state($color-or-map);
  @if $_disabled-color {
    &.mdc-slider--disabled {
      @include _set-tick-mark-active-color($_disabled-color, $opacity, $query);
    }
  }
}

@mixin _set-tick-mark-active-color($color, $opacity, $query) {
  $feat-color: feature-targeting.create-target($query, color);

  .mdc-slider__tick-mark--active {
    @include feature-targeting.targets($feat-color) {
      @include theme.property(background-color, $color);

      opacity: $opacity;
    }
  }
}

/// Customizes color of inactive tick marks, using a Color or state Map.
/// - To set only the default color, provide a single Color.
/// - To set one or more state colors, provide a state Map with optional keys.
/// - Supported state Map keys: `default`, `disabled`.
///
/// @example
///   @include tick-mark-inactive-color(blue);
///   @include tick-mark-inactive-color((disabled: gray));
///
/// @param {Color | Map} $color-or-map - The label's color or a state Map
@mixin tick-mark-inactive-color(
  $color-or-map,
  $opacity: $tick-mark-opacity,
  $query: feature-targeting.all()
) {
  @include _set-tick-mark-inactive-color(
    state.get-default-state($color-or-map),
    $opacity,
    $query
  );

  $_disabled-color: state.get-disabled-state($color-or-map);
  @if $_disabled-color {
    &.mdc-slider--disabled {
      @include _set-tick-mark-inactive-color(
        $_disabled-color,
        $opacity,
        $query
      );
    }
  }
}

@mixin _set-tick-mark-inactive-color($color, $opacity, $query) {
  $feat-color: feature-targeting.create-target($query, color);

  .mdc-slider__tick-mark--inactive {
    @include feature-targeting.targets($feat-color) {
      @include theme.property(background-color, $color);

      opacity: $opacity;
    }
  }
}

///
/// Customizes color and opacity of the value indicator.
/// @param {Color | String} $color Either a valid color value or a key from
///     `$theme-variables.property-values`.
/// @param {number} $opacity
///
@mixin value-indicator-color(
  $color,
  $opacity,
  $query: feature-targeting.all()
) {
  $feat-color: feature-targeting.create-target($query, color);

  .mdc-slider__value-indicator {
    @include feature-targeting.targets($feat-color) {
      @include theme.property(background-color, $color);

      opacity: $opacity;
    }
  }

  // Caret.
  .mdc-slider__value-indicator::before {
    @include feature-targeting.targets($feat-color) {
      @include theme.property(border-top-color, $color);
    }
  }
}

///
/// Customizes color of the value indicator text.
/// @param {Color | String} $color Either a valid color value or a key from
///     `$theme-variables.property-values`.
///
@mixin value-indicator-text-color($color, $query: feature-targeting.all()) {
  $feat-color: feature-targeting.create-target($query, color);

  .mdc-slider__value-indicator {
    @include feature-targeting.targets($feat-color) {
      @include theme.property(color, $color);
    }
  }
}
